###TFRecored introduction
example{
  Features festures = 1;
};
Features{
  map<string, Feature>feature = 1;
};
Feature{
  one of kind{
    BytesList bytes_list =1;
    FloatList float_list =1;
    Int64List int64_list =1;
  };
};



##### load packages
import os
from PIL import Image
import tensorflow as tf
import numpy as np

##int64
def _int64_feature(value):
    return tf.train.Feature(int64_list=tf.train.Int64List(value=[value]))
    
##char
def _bytes_feature(value):
    return tf.train.Feature(bytes_list=tf.train.BytesList(value=[value]))
    
##train output-filename TFRecored
filename='/media/hc/ubuntu/CTL/train.tfrecords'
writer=tf.python_io.TFRecordWriter(filename)

## original pictures filename
datafile='/media/hc/ubuntu/CTL/std-train'
images=os.listdir(datafile)
num=len(images)
for i in range(num):
    
    img=Image.open(datafile+'/'+images[i])
    img_raw=img.tobytes()
    label=int(images[i][0])
    example=tf.train.Example(features=tf.train.Features(feature={
    'label': _int64_feature(label),
    'img_raw': _bytes_feature(img_raw)}))
    writer.write(example.SerializeToString())
    
writer.close()


##test output-filename TFRecored
filename='/media/hc/ubuntu/CTL/test.tfrecords'
writer=tf.python_io.TFRecordWriter(filename)

##
datafile='/media/hc/ubuntu/CTL/std-test'
images=os.listdir(datafile)
num=len(images)
for i in range(num):
    
    img=Image.open(datafile+'/'+images[i])
    
    
    img_raw=img.tobytes()
    label=int(images[i][0])
    example=tf.train.Example(features=tf.train.Features(feature={
    'label': _int64_feature(label),
    'img_raw': _bytes_feature(img_raw)}))
    writer.write(example.SerializeToString())
    
writer.close()
